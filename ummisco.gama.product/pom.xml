<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>ummisco.gama.product</artifactId>
	<parent>
		<groupId>msi.gama</groupId>
		<artifactId>msi.gama.parent</artifactId>
		<version>1.7.0-SNAPSHOT</version>
		<relativePath>../msi.gama.parent</relativePath>
	</parent>


	<groupId>ummisco.gama</groupId>
	<packaging>eclipse-repository</packaging>
	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-repository-plugin</artifactId>
				<version>${tycho.version}</version>
				<configuration>

					<includeAllDependencies>true</includeAllDependencies>
					<profileProperties>
						<macosx-bundled>true</macosx-bundled>
					</profileProperties>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>create-zip-files</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy file="../ummisco.gama.product/extraresources/Model.icns"
									todir="./target/products/ummisco.gama.application.product/macosx/cocoa/x86_64/Gama.app/Contents/Resources/" />

								<copy
									todir="./target/products/ummisco.gama.application.product/macosx/cocoa/x86_64/Gama.app/Contents/headless">
									<fileset dir="../ummisco.gama.product/extraresources/headless/unix" />
								</copy>
								<copy
									todir="./target/products/ummisco.gama.application.product/win32/win32/x86_64/headless">
									<fileset
										dir="../ummisco.gama.product/extraresources/headless/windows" />
								</copy>
								<copy
									todir="./target/products/ummisco.gama.application.product/win32/win32/x86/headless">
									<fileset
										dir="../ummisco.gama.product/extraresources/headless/windows" />
								</copy>
								<copy
									todir="./target/products/ummisco.gama.application.product/linux/gtk/x86_64/headless">
									<fileset dir="../ummisco.gama.product/extraresources/headless/unix" />
								</copy>
								<copy
									todir="./target/products/ummisco.gama.application.product/linux/gtk/x86/headless">
									<fileset dir="../ummisco.gama.product/extraresources/headless/unix" />
								</copy>
							</target>
						</configuration>

					</execution>
				</executions>
			</plugin>
			<!-- See here for resolution and usage of fix-info-plist-maven-plugin 
				https://bugs.eclipse.org/bugs/show_bug.cgi?id=339526 http://stackoverflow.com/questions/24427985/edit-the-info-plist-after-eclipse-product-build 
				, another solution could be to rewrite the PLIST file by a new PLIST using 
				maven-antrun-plugin -->
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-director-plugin</artifactId>
				<version>${tycho.version}</version>
				<executions>
					<execution>
						<id>materialize-products</id>
						<goals>
							<goal>materialize-products</goal>
						</goals>
					</execution>
					<!-- materialize and archive products need to be distant in mavenlifecycle, 
						the only way for our ant-maven run to inject and modify files before packaging 
						by tycho -->
					<execution>
						<id>archive-products</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>archive-products</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- Selection of products to be installed and configuration per product, 
						see http://www.eclipse.org/tycho/sitedocs/tycho-p2/tycho-p2-director-plugin/materialize-products-mojo.html -->
					<!-- If the project contains more than one product file ... -->
					<products>
						<product>
							<id>ummisco.gama.application.product</id>
							<archiveFileName>Gama1.7</archiveFileName>
							<rootFolders>
								<macosx>Gama.app</macosx>
							</rootFolders>
						</product>
					</products>
				</configuration>
			</plugin>
			<!-- inject information into the PList file for cocoa, only way to do 
				that actually, see project fix-info-plist and https://github.com/buchen/fix-info-plist-maven-plugin/issues/1 -->
			<plugin>
				<groupId>name.abuchen</groupId>
				<artifactId>fix-info-plist-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>fix-info-plist</id>
						<phase>package</phase>
						<goals>
							<goal>fix-info-plist</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<productId>ummisco.gama.application.product</productId>
					<appName>Gama.app</appName>
					<properties>
						<property>

							<name>CFBundleDocumentTypes</name>
							<value>Gama</value>
						</property>

						<property>
							<name>CFBundleExecutable</name>
							<value>Gama</value>
						</property>

						<property>
							<name>CFBundleGetInfoString</name>
							<value>Gama 1.7.0, Copyright UMMISCO IRD/UPMC and partners
								2006-2016 http://gama-platform.org</value>
						</property>

						<property>
							<name>CFBundleIdentifier</name>
							<value>Gama</value>
						</property>

						<property>
							<name>CFBundleInfoDictionaryVersion</name>
							<value>6.0</value>
						</property>

						<property>
							<name>CFBundleName</name>
							<value>Gama</value>
						</property>

						<property>
							<name>CFBundlePackageType</name>
							<value>APPL</value>
						</property>

						<property>
							<name>CFBundleShortVersionString</name>
							<value>1.7.0</value>
						</property>

						<property>
							<name>CFBundleSignature</name>
							<value>GAMA</value>
						</property>

						<property>
							<name>CFBundleVersion</name>
							<value>1.7.0</value>
						</property>

						<property>
							<name>NSHighResolutionCapable</name>
							<value>True</value>
						</property>

						<property>
							<name>CFBundleDevelopmentRegion</name>
							<value>English</value>
						</property>

						<property>
							<name>CFBundleDocumentTypes</name>
							<value>
								<dict>
									<key>CFBundleTypeExtensions</key>
									<array>
										<string>gaml</string>
									</array>
									<key>CFBundleTypeIconFile</key>
									<string>Model.icns</string>
									<key>CFBundleTypeName</key>
									<string>Gama Model</string>
									<key>CFBundleTypeRole</key>
									<string>Editor</string>
									<key>CFBundleTypeOSTypes</key>
									<array>
										<string>TEXT</string>
									</array>
								</dict>
							</value>
						</property>

						<property>
							<name>Eclipse</name>
							<value />
						</property>
					</properties>
				</configuration>
			</plugin>



			<!-- Workaround: Use an existing config.ini file (caused by the problem 
				that tycho will always generate a default one) , copying /target/../ to /target/configuration/ 
				... -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${project.build.directory}/../</directory>
									<filtering>false</filtering>
									<!-- in case you have a defined config.ini -->
									<!-- <includes> <include>config.ini</include> </includes> -->
									<!-- <excludes> <exclude>src</exclude> <exclude>gaml</exclude> <exclude>target</exclude> 
										<exclude>META-INF</exclude> <exclude>bin</exclude> <exclude>products</exclude> 
										</excludes> -->
								</resource>
							</resources>
							<outputDirectory>${project.build.directory}/configuration</outputDirectory>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>
</project>