#if __VERSION__ >= 130
	#define attribute in
	#define varying out
#endif
		
#ifdef GL_ES
	precision mediump float;
	precision mediump int;
#endif
		
uniform mat4    transformationMatrix;
uniform mat4    projectionMatrix;
uniform mat4    viewMatrix;
uniform vec3    lightPosition;
uniform float   useNormals; // 0 for no, 1 for yes

attribute vec3  attribute_Position;
attribute vec4  attribute_Color;
attribute vec3  attribute_Normal;
attribute vec3  attribute_TextureCoords;

varying vec4    varying_Color;
varying vec3	surfaceNormal;
varying vec3	toLightVector;
varying vec3 	toCameraVector;
varying vec2    pass_textureCoords;
varying float   varying_useNormals;

void main(void)
{
	vec4 worldPosition = transformationMatrix * vec4(attribute_Position,1.0);
	
	varying_Color = attribute_Color;
	gl_Position = projectionMatrix * viewMatrix * worldPosition;
	
	varying_useNormals = useNormals;
	
	if (useNormals > 0.5)
	{
		surfaceNormal = (transformationMatrix * vec4(attribute_Normal,0.0)).xyz;
		toLightVector = lightPosition - worldPosition.xyz;
		toCameraVector = (inverse(viewMatrix) * vec4(0.0,0.0,0.0,1.0)).xyz - worldPosition.xyz;
		
		pass_textureCoords = attribute_TextureCoords;
	}
}